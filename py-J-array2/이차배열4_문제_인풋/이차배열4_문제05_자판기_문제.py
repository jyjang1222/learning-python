'''
    [문제]
        철수는 편의점에서 아르바이트하고 있다. 
        vending은 음료수 냉장고 물품 개수 상태이다.
        숫자는 아이템 번호이고 
        0은 비어있는 것을 뜻한다.

        냉장고는 최대 10개까지 저장할 수 있다.
        그리고 같은 종류의 아이템으로만 저장하며, 세로로 저장한다.
        box리스트는 현재 아이템 창고 재고를 표시한다.

        왼쪽숫자는 아이템번호이고 오른쪽 숫자는 개수이다.
        예를 들어 [1,4]는 1번 아이템을 뜻하고, 남은개수는 4개를 뜻한다.
        box에 있는 상품들로 채울 수 있을 만큼 채우고 최종상태를 출력하시오.
    [예시]
        1번 아이템은 4개 밖에 재고가 없다.
               
        [vending]
        [0,0,0,0,5,0],
        [0,0,0,0,5,0],
        [1,0,0,0,5,0],
        [1,0,0,0,5,6],
        [1,2,0,0,5,6],
        [1,2,3,0,5,6],
        [1,2,3,0,5,6],
        [1,2,3,4,5,6],
        [1,2,3,4,5,6],
        [1,2,3,4,5,6]
    
        [box]
        [1,0],
        [2,8],
        [3,3],
        [4,4],
        [5,8],
        [6,9]
        
        남은 아이템도 채워보자. 
    [정답]     
        [0, 2, 0, 0, 5, 6]
        [0, 2, 0, 0, 5, 6]
        [1, 2, 3, 0, 5, 6]
        [1, 2, 3, 4, 5, 6]
        [1, 2, 3, 4, 5, 6]
        [1, 2, 3, 4, 5, 6]
        [1, 2, 3, 4, 5, 6]
        [1, 2, 3, 4, 5, 6]
        [1, 2, 3, 4, 5, 6]
        [1, 2, 3, 4, 5, 6]

        [1, 0]
        [2, 4]
        [3, 0]
        [4, 0]
        [5, 8]
        [6, 6]
'''
vending = [
    [0,0,0,0,5,0],
    [0,0,0,0,5,0],
    [0,0,0,0,5,0],
    [0,0,0,0,5,6],
    [0,2,0,0,5,6],
    [0,2,3,0,5,6],
    [1,2,3,0,5,6],
    [1,2,3,4,5,6],
    [1,2,3,4,5,6],
    [1,2,3,4,5,6],
]
# 1 001020 ... 90
# 2 011121 ... 91
# 3 021222 ... 92
# 6 051525 ... 95
box = [
    [1,4],
    [2,8],
    [3,3],
    [4,4],
    [5,8],
    [6,9],
]

for i in range(len(vending[0])):
    # 비는곳 시작위치 구하기
    emptyIdx = 0
    for j in range(len(vending) - 1, -1, -1):
        # i = 0 ~ 6  j = 9 ~ 0
        if vending[j][i] == 0:
            emptyIdx = j
            break
    # 비는 공간사이즈 구하기
    empty = 0
    for j in range(len(vending)):
        # i = 0 ~ 6  j = 0 ~ 9
        if vending[j][i] == 0:
            empty += 1
    
    # 냉장고에 재고 채우기
    # 남은재고: box[i][1]
    # 남은재고에 비해 냉장고 빈자리 널널하면
    if box[i][1] < empty:
        # 남은재고만큼
        for j in range(box[i][1]):
            # 비는 시작위치부터 채워감 emptyIdx - j
            vending[emptyIdx - j][i] = box[i][0]
        # 재고 0으로 만듬
        box[i][1] = 0
    # 남은재고에 비해 냉장고 빈자리 부족하면
    elif box[i][1] > empty:
        # 빈만큼 모두 채움
        for j in range(empty):
            # 비는 시작위치부터 채워감 emptyIdx - j
            vending[emptyIdx - j][i] = box[i][0]
        box[i][1] -= empty


for i in range(len(vending)):
    print(vending[i])
print()
for i in range(len(box)):
    print(box[i])